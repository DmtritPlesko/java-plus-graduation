server:
  port: 6589

grpc:
  server:
    port: 6588
    enabled: true

spring:
  application:
    name: analyzer
  config:
    import: "configserver:"
  cloud:
    config:
      discovery:
        enabled: true
        serviceId: config-server
      fail-fast: true
      retry:
        useRandomPolicy: true
        max-interval: 6000
  flyway:
    flyway:
      # Явно указываем PostgreSQL и игнорируем проверку версии
      database: postgresql
      ignore-future-migrations: true
      # Дополнительные параметры для PostgreSQL 16
      postgresql:
        transactional-lock: false

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
    hostname: localhost
    instance-id: "${spring.application.name}:${server.port}"
    lease-renewal-interval-in-seconds: 10
    metadata-map:
      grpcPort: 6588

kafka:
  topics:
    actions: "stats.user-actions.v1"
    similarity: "stats.events-similarity.v1"
  bootstrap-servers: localhost:9092
  key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
  value-deserializer-similarity: "analyzer.deserializer.EventAvroDeserializer"
  value-deserializer-actions: "analyzer.deserializer.UserAvroDeserializer"
  consumer-analyzer-actions-group-id: "groupAnalyzerActionsConsumer"
  consumer-analyzer-similarity-group-id: "groupAnalyzerSimilarityConsumer"
  auto-offset-reset: "earliest"
  ssl:
    enabled: false

logging:
  level:
    org.springframework.cloud.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
